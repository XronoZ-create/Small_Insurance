from config import Config
import time
from datetime import datetime, timedelta
from modules.rca_methods import RCA

import requests
import random
from modules.telephone import TelephoneActivateSms
from bs4 import BeautifulSoup

from request_reg_alfa.json.step_1 import SaveAuto, SaveVoditelAndOwnerAddress
from request_reg_alfa.json.step_2 import SaveInsurance
from request_reg_alfa.json.step_3 import SavePts
from request_reg_alfa.json.initpay import InitPay
import json
import seleniumwire.undetected_chromedriver as uc
from urllib.parse import urlencode, parse_qs, parse_qsl


def interceptor(request):
    virt = """
        {"ua":"v1$85b9$TEcVVQ4RXENcQXkKHA9cXFQYBhZSERw0UFpSDEFEFypjRVIETFQCQTEKWlNSXRBIAwMaGCNBRA9cY1MBfV5DSwJWVBpRUhlJLStgKCpKEFxcXFYYJVRXCFYdFiBeRVgJUkpaDUxUF1VeVwBLXlIQY1RRUkoLHgFQDhoFVRQbFRBeCAYWWFUPVV9QB1BSVwQeDAYBRQ==","br":"v1$32fc$HRBAWQ4WVUBZQkZaQiRfSlBRWEsTDFEEDkMAH0cPF3MOQFlVB0EKFhFMAR8TC0VrVFFWQVgUDQMDXBZWSUQNQylCU0oDQQoEAlUXVh1AX0t8chUJV1dbFgccR1oWIwBXAxAMXgMPQwdPGw1AdAZRXXZfRVxcX0IIQAoDUgkVARxEW0V6DgpeCUEDEEFEB0sUF0NeXlQUDVRUBFwAVlNQAVIcDwpTHg==","perf":"v1$bc3a$GUdHVl4WXBpbHRQiSRdaEQkJYFdHV1dBDFFeWlZDCUxAJUFFXRdWAiQQUwxNMVQXAVZEEA9KRR9DcFdcR1tWQQcLRXRdFldMEkQMGRslRRcJR18IcEddXRVzX0xdFUAVWB4Td1UGTQISD0wHG18GUxtOHBB1Vl1HW11VVFwTShVYHhN3QhFWTA5ceQBTAFYRRAlLEHVWXUdbWkNxVgBDZAsfVHtbDlBMQ1wEUw5XA1FfBwcAGRN4VARECkxABFd9MS1UVkIwUEIERAxRAFQMXVIHHBB1Vl1HW0RfTVINeWQqAFBHYQpDXUNcA1AOXQVVVk5NHhdxX1YVCl5YRQhUVhYMXlkQWUIaIRZEDU0KDzUDQVZdR1xZXQJVflhFCFRWFgxeWRBZQhohEFcOAzFsNSNsYndmdGplJHQSAwFUBhtAJUdWXlltYTEjaSB4Jn46IHxiZXRjfBFbAhwbcxdSW1gxaGd3PGt9LSl3JhtfBElEc0ZTWQtsajF1b3dyN3pwIzF0FQhTFRohAVMWAxdQAQ9BVVFBcldGD0QSAwNNEXcFAEUNRhpJXUNcBh9ESRclAVZECEFYVVoPVxIDSENzRxAKRVgIM1xKBwlED1gLVgAyWl1bW1YaCRoScF5WFQlbDQRVckQGV0wkCFJAA1UZRyZUVUYPXVdSBXVGXF0VYEMDF0UVCFIPDFhVBVcNVAFVXgIcEHVWXUdbVF9UcA5eRw4ARVIQWQgOVV8FUQxRBFFWCwAeF3FfVhUKVFZeIlxZFgBfQ34MWFwEAnMUXAtBIAhXEggEBwwKUgMFDQJVAw9SSRN3VQZNAgUJWyFWC0EACEd8XVRVXVckRlVXRzJHVhAREw0DVQ0BUlUDVghRBV1WHxJyUlRMCQVfXXBdFVZFAwZFXkQGGwJQUAJbClYAUVcHAAoFHRpzBlVEA1cOXnsNBFVeXAQbAlBQAlsKVgBRVwADCwcdGnMGVUQDQQRARw0LQlJ3DV0aW1cAVgBWBlBSAgMBAgcUESFXVU0JE1ZEEgpfRFcwTVkTEhRYCFMBXFUABQYEAgsEUxwSeVQERw0QAEBCVxBNaxUHRBYbXwRTUgoDAQAFCQBRBgkVESFUUhZfQlJRFktdIglYDFwGQQwJXWNGVENMEVsBBg0KUgACVlQDDgBWFRohAVMWAwZaCwhWU0ZwX1wRWwEGDQpSAAJWVAIHBFoVGiEBUxYDBloLCFZTRmZFWUEVEgoIBVUKBFFQBQYAWgkKTUR2BVwRDwEJXlFbW31XXApFQHxdBRENU1MFDgFQDAxQVA5bAUkXJQFWRAhRXlVSCF58VlwKRkcxEVBFRkEDCVdSD1EKUAFUVAsJChkTeFQERApfVhVQXzERUEVGQQMJV1IPUQpQAVRUCwkKGRN4VARECktWBVpFBwZFclwHGwJRShQiXgBBXxRWVFtHVFtHMkRRS0dDCQdOR3FQVxcDTQ8KWQNdIEMACEd1XFETAgNNEnBeVhUJQgwJXlZWJk9dDxJlFlgXQUdcAxwQdVZdR1teUU9aBlJDCwpfZEYCS0xDXAdUDVwGVlMHAQANCA1OHBwSeVQERw0NC0NSQQxMSgIDQgtUDFsCBEZWVFBDXkYNXBIDET5daEBJE3dVBk0CFQ9bB3YXXAIPXRIIBAcMClIDBQ0CUwsOV0sGSk9PG0wIC1NAA1QDUV8AAwcBAAwdWAIBRA==","n":"v1$b20d$","ws":"v1$cc83$TUFHBVtCUBRZGhVyEhANFVsOYVtAVlEKRlwYECFXVUIMDEMNUllBVxcIWFxAWBlDdERAV0ZcDjcHFAZXD39CX1MNRQVDXlpYQVtMECISEA5AWwh9RFZaEDAHEVUERBIMFDxcOxUbF3YEBEMIDQwBCVVaVV0QCRY7CjlBHkNwV1NCWUUdR1IXDEENVlwGEQEARFEfSEBaWQUWH0EeQ3BXU0JZUApQW1AUWVFKT05AIgZRQAhZRFJdCDAJExBbABwUdgRUEA1WQ1cKDXtXBBZAWwQYEHhVVkBeFA8bVw10VUZCCxNeBQMZFCMGUkZYAQ0NW0Z2XUJHXEZeVFceQ3BXU0JZWQFeUF1CQVsGAlpSTkN0U1dMCERdABAOQQhQCQIGGkFxA1JDD1cVAF5eKgcLBlxAEAIDAwBUSEQjVQRECldAAlgIYF5RQgtDDQNbUFIcSRgQTFteUUZeV1UGWAMDAwJSBUoOBAxL","ws2":"v1$f4e1$SUETWF5MUUACGBcSDDNYVUFdEQ0AAgxOR0xYLlRdBg5GQV8AAQsYQEwMYg8BEFkTDwUfFUdacAcMX1kSEw5RShAHB1pAGw4ZGhsXXFVIE0gXDwMbEUJRBhFQE1wCA1VKEAsAUFVRQEACWxlEEQtBEw8FHxVBXF8KERoLVQYATURQDBFNXVQWWABPFwoAAkUTDwVOGxFGQEBfCB1EQk1DXAJPR0pRURZYAVAHSkcXUkYXDwAAB0gUQBFRXAMTDlBQBlpWCgcNBVYWWgEb","ws3":"v1$e993$S0YUUA4QBEQISxUlTgJfCVcRXhVfFxcTURsTdhBYVVxUExRCQF9DDltUUwBWQR8RcxBXW18HAwMWDUVEE1wVRHASA11YARYAVxINEUoWVh8RJkBWCVkSEBYNShQmSUsJRAtYZwsWFAdeZl4ATxNcQUdEDExHIxUUW0NeDCNPXAhEMANDBQAVRAhLSkkaI1RWR1xZWRYAFwlYWxMMRGZXORJIQHEFABVcXV5FAEsKSVYRXBRoCzxHShZ3VlMSA0oFUQgHE1hUTURyV1IRAgtWWlQOQhVfWlZUGBVxUQNNAxFZABZZQF9SUQYcFSVfBkcJQwdRUjEMFUQOBx0UJl5cEgoUA1YHKQQARhINVRRBc1RWEgxYAwUWA0BjXkZEAwlKEiQFVBZfDgBUQ1IRdAZVRxFcBkoYHklEQF5cU0QDCFAEXVECV1FQUhwJAxg=","st":"v1$8b55$ShNPV1QXVxMPQTIdSANwE0dXQQgUIFlZWldHQ0EAVFcRQUtZSAdARVwGFURXABUPQFRfEhwRXVZQUV0EE0IFFBhtVxYYQhJQQUMpBlIDVhUbW1tXVwgYH1xMRxNAXxocRkZOGFkOVFBGFxQFUEhHFBpnbENGAkxYRhdCAkYRXWxERVRpTlAcW0ZZV14KVgRYAQ0ablpDGBcUWUdDWxFBQ0ILFhlPFUUfVA8ABUsSRwBdFkFHGzxnRkZZRwxBSkRSREVRaU0WX25DUUgOS1wEWw0PBQABP1YXFBgTAkdFW1ZGEWlEVw9bQlBDTlhZCFoPTFVcR0ddEWtaGBNDEwRBE1lFTUZLWB0eQhQRSlkKUwBGTEFTXE1KQhtnbBJBBEFcQx5IV00WWm5AFws7TlQbC0YCAggMVA0HB2RdQxNFFVJFEXhESgNLH1gCFkQQWlQPWlZKX1sWSwkdZF1DE0UVUkURShYQCkZFRRBcSxcRQhYbWV9UVRBMRVVQHRFGSmpsQENYQlcQHUBUFhIMZxNBDGpOARxeEAIGDgAEVwRRHG9fERkWGANGEXoBDAFbEhsEGwRQXVkTTUNRXA1DaARGE3Z6dl1pPxIZXRcSFEtcGk5CT0QcVQ9eVkdMQQJbS0dGHm5mR0oDRl5HTBcFTRJdPkBMXm1CURZdRwICWQtRAAcIGGVYGEISEVQXRgsWExtdVldeQkEXXVMKGBsLRxFFQAseFkFPFRxQWQUHF0wUVAkbSkYdazxJRVVMXBEcFFRGRVlmQ0wPbUcHTQwXAlcPWQ0IAAAdP1YXFBgTAkdFXUdFQUoMF01FRkJNBwheB0YVR1lbHEYWF2hrSUECRwpHHEBQTEJQPUdFWDwQVhYMRlsEAgEDB1cBBWhWE0MTRVRHEUQZHlAWRkFGWUlLTxFCT1RUVVNHF0pWXBZBFhw6akJDUE1ZSk1DUEAXDjtNElg+QwodWEdZCQ0AAQtaAkwXHxNFUFtdQAgAA1dfVwtTAVABFgoGBR4=","wl":"v1$3ddd$TBdDU18WXBpZGBByTgQPA0JTUgNKRQQWRg8UGhUUJhdWWQ9CXwxaGllBWkZMFRADHxlDEU8ZAAgCVEVMS1cOT0VAGltdB1BOCgdHU1QWTFhFQltJXVgSBQNaGVtYWgVOFRkXckUCVQIPDFEQAkcLTURGR1wXGBYTExtXVF9XFRVFVF0cQRYWUQ0HW0RRARZYXEUbB01DDksBWkVZXllJAlZZVh0RHhUaFwpfVxpfUg8EDwdVDQNQUEoMAglE","wc":"v1$3518$HxcTVFoQXBFeGkd4RVFfAlYHFhFED1QHWBJcSRd3ElAIDxJeFF9fUggSABQRcEVZXV4KRFwXbRNrQxVHdUEFXV5FDRcMR2ZGO0NJGnNGUlQLBxQORA8QOUE+G0kXdxJQCA8KRVMXWBFeQzpNbBIfGnESBQpcWkIUFlsbOkBoRh1GdRNUWl9aWxYOCF0RCkgacRIFClxHRwhACFQAFw0fEyRDBFkMN1xCEQQWTGZAV1lFAScOA1ZZNUAATRBGFV4TO1g6FxpHeUUFDV9oX1FHXl4WCSkVFwhEawxmRxkVJEcFWV9lWgRNVQsTCHZSU195QwcMRFwXbQtrQxVHdUEFXV5lCVRCA1ZBCSAXW1sSCRpuCTtEShdyEFUNAypbZQFCEFQXQWQASEYNEwBcYVVSS14KRlxEal85Fk0bJUNWCAsrWyxbRRFYXwgEAWpWUUBXX0ZeRDlYbUQYQ3kTVFteQgFbAXhTFkpSAwRHAhFvVVZuRkhEJkNTCg4CVgtbUgdFRg9HalALZhFIQyVOUlwJUVVGXkQ5QG1ESU0bJUNWCAsFRRUXDB4bcxIACQJhRV1WWAoDNRJURgMWWxs6WGhGHUZ1E1RaX3BdFxUEVF9jR1lFAUZcRGpfORZNGyVDVggLFkALW18LXmAQABFdEQoRZ1cKO0RKF3IQVQ0DDFtEEFAIWTZBVxFcEV5DOl5dbxEUEyQSBwoPVQNAKEosW0QQUAhZAFEUXxtsAg86Gh8Sc05QCF4BA0F2A0AAUAlGFV4TO1MLahRJG3MSAAkCWkN6VkIQBQoKUFZEDgdYCUZSGR1GdRNUWl9aQA1DXxpsVl1nE0hGJhBUXlxYDlgBYV4JVBcXXxdpA1dsRhxJGnNGUlQLE0ZcAFReFVFNGyVDVggLE0YGFwwRS0YBHEkaR1leXRNeVVBSDAFVAVUIURsOUAMZ","wci":"v1$4610$HxFCA1gUUxIOT0YlQwRcCk4VCQQWCwdZCEBVGhAlQ1QICUMRWVAUCkBGEQAZR3BGWApeQUdcURpeR0JDV0kXdRJSWFhTAkRHFg4CBFkWVRwbJhJXWAsWU0YJVldeFlAZRnNCA1hbWBIOFjsQakccEnkQBVoOQQkaXhFvQ21HGRckRVUODgJGWBYORjpAOhIcGyYSV1gLDkgBQVEUCEdqQDsRGEB0F1dcDlsUFxdfEm9MOUYaFnEXWQgJU15AClhQRglPQHQRRF9AW14qVw9VU01EXk0WcRdZCAlEWX4KVlQIVmcWRghYVxYORjpTC28SFUQkUVFFW2c7Q0JZRgpqakYJFj1ZPhQcFnQSBFlfRlFVEwF5UhNbGjtVXmkQSRd1ElJYWEAOZURGXQoCF18Sb18IOxQYEyFOBV8KRkAKRVAWR00rRyRYRVlRFgRXCVUSA0Q7UFpuQxRGc0ZXXl9cRjRBWxZbFU9AUXsCRw9Hb1ZXOUYaFnEXWQgJb2leClpeEUNnB0AVU0Jra0ZfFzpWXmZESBR0RwBUXmxvWl0KXkAUdFEWQAREb2sWXkdqA15vG0pGdkJQDQIMUkN5RQtlRwtDURBAGBQKFmsCC2pHHBJ5EAVaDm4+XAFVWVhXNlBBEFZGPWtDDBJrUgo6F0kScE8HCAxrbgVdAlpeU3UAQUEBQWs9FlsUb1JaO0cZR3BGWApeVVtfEkwWRlNCXRcXD0ZsUgxrQ0scFnQSBFlfU0NQRF4Ua1cPZ0YfEnZEBFkPCFxVBmAIW1VHFl5HagNebxsbSBR0RwBUXkQSDFQEWUYBHxYiQgBaCkNHCVEXX0RCTANIFHRHAFReRENbAUcPUwVfRwdJTRREXVkBRw9UBgQAVVcDAABVFl0HA0s=","st2":"v1$b367$SBUVUltAAUECRiERE19KDEV1WFAIBFAWFV9CXRxRW0FHUkMUVEcBAkwBIQ8EXV1YERQZVgpBE3IOUxdVAVpMEwkXN1tSFRACX0QKAgxVGEYXXE9QAARQFkkXUh9NFFFHE1kMRxdURBVZCA0HQV5ZWwAdZVdEQRQWAERCdwZeXVdHGQBbUlYPQxAMEBcRQwIZSkROTkoAWFAAQxZKBVwWRkYYPGxGRwUXVxZLEgBFTF46Rk1UOxcGGAtDWAleBggABABXGmtbREMYRAUXQVhMQhVAAxZLFkNBT1EOXgVHTEZSX01BQho7PEkWBRcOQhdHBEZNUTsUQFs+RlAWDkcCBQkPVAUFADgNGEREQwBEGFgARBlpFg5ZXxJVQhBYVVZbXU4OXEJGWkpkCkRDQRBZQkVbTU0UEg4ZTkcVT0pVVFJSRBdBVl1KEU1LOzwQQllCCkEWSAUUQF4+RRZVO0IKGllEWQINDVNWCFc4DUEQGBYERxl4FhNVT09dA0hEHARVXVgNSlpaERAGTTgNQRAYFgRHGUpESVxCFUARAksbT0NEGQJfUVQXF0oFDE0TRRdpOkJLWBAORhkQURdMDGtNQF5oFQEZXxdZCV5cVFUHDB85XRkZREFVQkF/AFIBV0waVhlfUFhYFBZMAQBdQWtZRUV0cnYPMGkWSVgWTBRHAhscQBREGVQIBVkXEBEAWBZEEBxmZhUTVUIOQk1JBUFMXGxCF15oQ1ZNUhdeUlsIDANRChBlCkEUFkFRFhgLGk0aD1QMXkdAEAZcWkRLCURMRhYJFhYTFkMYAFwEWRdASlVbGRFGGGo7EkoFEAwTH0lXEEdRZhEVWWkXAkxSFw4JDgsPUwAFHDgNGEREQwBEGF4RR0lKXk4bQRZHTFkIUllHR0UCWxlHEUxnOxURAERXREpCWEwQCWtDFV09TlYaUkcJBlkBBgZQWgo4CkNBEBhXERNMGUwJQEIRQ1gXS0NPQx1WD1VWRhARWQxKERQfZ2kUQVhNCxMbRwBFFlA7QUxZbEFRHV1GXlICUF1bWAERFEkRTVAJBBYMUAZWAVcHDQACA00KAwYZ","t":"v1$6539$GhNOWVUQVxcPShpYUkUKEggUBVQCU1VRAwALDAYAVwNTBg1aXQdWAAIFD1VVUlRTBwAVTUEWWUEWWwEIWk5DWgRWGgIBVB4XUENKEgkEWxwQV1sNQVwFAA1NEU9BWEMGUQlACRVXSgUZAEBVHwcaAB4HAhkGSgdKBE0CCxsHTQdXSQgUCB1XGQRJCRwBDhoAHgdPUE9XTgIYUEsIT1NTTFEdAEAIR08ZF0VRXVYUWAEEAg5SUFMCAwBPCg1XHw==","tc":"v1$9d30$SRMUA19NVUYMSRFVQwkWVVIIA1IBBwcIUgNTCARTFR8eExYLXl0SXgcEBwpSAAFQUg0cWgQDSw==","c":"v1$668d$QhVBWF8XV0RbT0F2RgNZWwFZWlxQUkdeCl9/WwNaQ14bXwUbH0ByEABYWUFREXQNFlNGXFRFVmcXXkJaBloNJU9WXlVSAF4DQw4FV1wRUE1AdkJTWQtdRwt/U1IKQQgFTVJTaUENRgkCWw8UCkBdU0AaFnJDUF8NElBFexVbLwFeWENQUhZXAkMOF0RFBxlDIkBVXg9GUkQjVEJWDVAFMlBWZElXGxBcFUYWUxxAdRcDWg5cVEdaUARFX1oLYRgUXBUNG3wWWgMTFk8UcBRUDVhQXUBGRWNWDF9CdANBBBZ1WFZdZwtfA0MOUxoSIkMADgxSW0dCR2cEWFhBMVwMARsNBxURIkQHDQ4FX14LRgkuWVVWYVheUkcLBhlHdRcFVQ1RUF0LQQ4lWwBDXQdbFS5ZVVZhWF5SRwsHA1EMUlcMAwYNHVIKSkN0FVdcWFYOD1tdRnleUlMxWFtQRw9QUg0OBAoGVgNVTwdUBBxAdRcDWg5BQVBBQyleV1ExXAwBGw0GDwdbAVVUAFIEHloMVE4UdERUXQlFAEBDUBZBNQ1UUhUDAlQGX1IHVgIBUBtZWwNJHhdFWloAEwwEUwFYVwoCAwgHTAtSVEk=","pvc":"v1$5cd8$GEZBUFlHB0MLHhtXGwNpBB9WOR8TQ0RfOFVKAWxOQwUTEBULbgNOUWxJG0xKGwhvAkpUbh0REhYAR1xqAE5RO09GQFZFEFg6AEkJZUQVEEBaCwERCwJQUVpWVQQFU1VIWlACTA==","pvm":"v1$ceec$ShdOAAgXAUYCHRMKEAsaBkQWQ0kVFRUKE11KFBNNFwZBQRpbRiQFDVQDVUVGXhgGTgECEEMAFxdBV0sSfARGFlBSXUZEDQpEHzFYC1ZeT0QMRAcQWQZDWV5WGAVQD2UJUExsGBQHTE0YHRE+XFBMCkABQQZYAVJtEUUYBV4UWQERW1cVRAABRFsKXgtXVRZBGkYVFhVfFXZQUVQDVUFBChFQQAQHFxABGEFBCkFFdQZFFwACUkIXX18YHzFYD1EKRhICQQIXCgdMD14LEkVXMEIWCAtQTR4QShhjCFAVXBNUFVsOAAc5REVGUgpHXVxDWAsVRVUAF1NdV1YDVU8XSRNBSwJGWEYiWQ9dAFYRTAwWARkAVBBDVREfSAlCFXgAQkZZBgFFRAtWRhYyW19cDEFDW0VREFlTRVFXCBECVAldHRFBH0I/ClkSWBNXEVsMUgE8RUpFVF9EVFxGXw5BRVNQGAIIDQoBXEgTSRBGXxMUXkMjVgxbVVUYTAkRBE0AUkBMBERFFAtLEnwAQUJZBFNDQQpZRRBnWFZcCUZGD0VXQFYCEAsLChgBVBFiUEoCWwEVAEVNHhBKGGMIUBVcE1QVWw4ABzlERUZSCkddXENYCxVFVQAXU11XVgNVTxcYHRdMCAkHRl4JUAVcAQINVwdQT1wDUEo=","cc":"v1$2aa3$SBQUVlUUUUZcPT4aF0VcW1UaDgVVUQFSUQcEAgEYXQIFSw==","df":"v1$7218$TRZCBw5DVBEMTEQhUBRZEFEWWgZBXFpdFiQTXQUSDFlYHB1GGRZqXVdDDxdTFgBdUwZpRUgXGRF2EhRcEglfcENaVxILWV8RDExEIVAUWRBRFloGQVxaXRZKTxMdRj5YV0BdEAcWUlxSUjtBSxRPEHcEUREPVEdUQw8DXRIVRwwUYE0WB3NDQVlFXEERVQJeWwZGQhkVElBXDgpWA0FJFldaUEZFV0NUQ1oDD0JFRBJHEVsVUEdBWlMRRl4HH0VYWUAUBAcWUFBVUhUSU1JDXVlDRxFHXFZHFg8JVwNGA0NYV0APDVhCE1lFRhVeU0NTRQRBCFBbQUAWDQRZAwURRRZSWxRCVVBfWkRGFVkWF1pSDhZJF3VSVkJYBVIKCgBEFA4WMhtGVHZERQkTDBZEUVYPWABHEhkTEQEHXwoDABEaFFUIBhYWUkRQEwxTWBdBEENEF1pFUEFCCwNARgsETxZaWxJCVFQTV1QFBEVFBlYXDFpFRkFHWlUWRl4JAgAWUEFaBRZfXl1FFwkTFkILVxcCRgJAWFBdQhFGXAQMAFVCRxQADUQRUFdbChIWQgwSQwtRCBcZF3NAAwoJEgk2QkRdWgFADEoRdlFEWxRQFlxUF10KWxVBXGUWFFoIAU0fFk8UPQxXRVpAUkYCWVIGbxceFkkXdUVBWRYJCSATC1VCXVsIQAwTc0RSAFsEFE8QdxVVCQ9bVF5TQFwREgk2QkRdWgFAGhNzQFYKW1pTDVVDCxZfBUgZEXYUB19cBQRaWhYOHUB2VxEMFQAUWFUXW1gNFAZUWVkbH0IdEz0IBEJfQlFGAVlVVmsXG0MaFCNCRQxACg9zQF1VFg9cCERfFHZGUQBYBBMfFHcQAFoMDVNaBhZfF1ZUX1pAShEmEARaDFhRCAVCWREMBhtNFHYVU1tZVgxbURcJTUAmVURcR1BDWlcSC1lfE1ReCAUeH0NJFzhaBEFcQ1YWAQlXAztFSxQYFiYSRF5HWQ0gFFhVF1tYDRZfF3VHVlBYVBFKRCVAV1gOCANbVBEMFQQIWFJBHhUjQgRZD1lWWAUSW0RcVEsaFnQQA1oLUkZHChgUDBgQdwUWXxdTQF1VFg9cCEYERkZYTU5LFkoTbVkHFV9ABhJUDFAAaBVIERpAJkMUCRFZDHJBCAFCWFxYFVxDdkQGVA1RFkkXdUNSWlgIUgsDRwwUVUQWDk8THxR3EABaDA9XWQRADRcPB04aQCZFBwpfVVlaRxIQQ1JHWUVEWxR2EVdRWQVHGRd1RVcOXF0HCwAUDBYWSkB2R1JaDQoEWFEXWhVZBBgZF3VFVw5cQxQJEVlCTUQDQAwTc0RSAFsEFE8QdxVVCQ9bVF5TQFwRIBMLVUJdWwhAGhNzQFYKW1pTDVVDCxZfBEgZEUILC1ZEXFQAAg0HVVcCAAcYDlJXSw==","wx0":"v1$e681$HxZAAggQVxRfTRAMAERfEVxGBwoDA1dTAlcPBg8GClUAVVQCBlYKAFAEAFxVAlMAXwFEFUBRHEYXDxVWU1UKDlIBVAUBBARSXAEKUFkABwJQB18PW1cAAAYEUxIaEVZPEGtABgdHCBQkeHUoJGheXRUQB1cBUQBtVEdFUU9ACHI8YGkBCABcUjpbWwoMVk8IIzwyZgFbCF1HalVFUFVWRTtcVw8COlRaCldGXyRvY2wCDRVTDV0KRmpBXl1TQWxGEVFEGl8gamI6UF4LAENoUQoBCF1ZcTxmalNFUVFsV1IUQF5YIT1maRZkdSZacm9nORcOWAZRFm1BUE9EQ0FWaAhbUlghPWZpEVNKEBRFUmwFCwtJEFEXQVxaWW9UQ0dUX3FuNzsRV04RQ0ABPlRYXhYWA0oRXQtcakdQRFUIdm8wa0IGHBFHRABpVA0NQ1JBOQUIUBFbEEBaRV5TDXh7ZTtEVxEFCV5TCWlBDABTUkE5BwlUEl0IVw56cmNpVl9SCVFYFzsMXFIATm0RCFlDCCkhNWYEVgttR1BZVFNBbFoNRFsCFF59czZpQRAAWVNSFAA5XQdGDURUQV5GU0AIeCFnaRcBHUZDF1NtAg1YVkddKyNqPUABSkFARVVpVV9YBUBpDw0LV1cXDX0hMmhDVh4QE0sHawxTWVNoVlpcUkNfe3MwOxFXThFDQAE+X1ZfADsAVQ1VEG1ZXFlVV0EIeCFnaRUBF0ZTHWlTFhNWTmwJBgxcAUBfZXB3cHxpUFxbC0ZpAREDVFMXaVQIDlZDCDEhJH4uawddWEVFVUVAVlM7QFMbEBBAUzpFARACDGB2JCMqZgFbCUJHUERDU1dsQwFMQhYWAG1FVkJROxJFUFFdMyN7JXg7VlBXQldpQVZZAFFEBhY6W1gDWQkzJHVwfzkAA1sXUztBXVRTVURACGAhdnEvOwFXRhFebRAET0NGFAFdbid2I35qUUVRQWxRQgJSUxEXXmVzJ3F+Ow1YRFY5BwlXFlEcRg5icnJxf2xaEVhCCjsBQFcSDWUhI3x+ZzkhPm09QAFKQUBFVWlVWlsQUUQ8BQtbRQpCQAsRXlQIMSEkcitgO2Vwd3B8aVBcWhRGUxAXAFZpEVNKEBRFUmwVVxJaWWMhcH58Y29hdnFwKGtSBhQRWmkRU0oQFEVSCDEhJHIrYDtlcHdwfGlfXEQBa1UMChFXThEUHkYTUllXAxYDS0AORmVQV3xZQhNkUgZzekFIR0RTF0VbCw8VDRExAQR+LhRVHAUVH39GVl1wKBRzMERXHAZFdVoWDlpeRgtNRBVAUxQQDxdRRVhQR14LWhYEARFiVxdXXwEVUkUbT0QdGTlaBUZcQ1IQVVxXUjkUS0FIR1VFABQIRgdCWVASDQlXQlMBRmZAR0BZQUdSAHFOFwELQV8KWEFMSBdMEz0KB00LQgESVlpTVWsTThVIFk5BXh4QdhVEXRAODWBWBCMqawdaAFdHXFlXdVxdQwFMQkFeHhB2AlNGXgJWWUUHF0QDGRYkQkdaQ18Me2d6KHdXDRIEQXMJU18BD0MVCUQ7C2ZASRlPGRdCXltSQFwBUGkVAQtWWRcUCEYmWFhUCgFGcAxXShIddHp0HxEfFRFaWwIXDldSOkRXCgVSRVYURlwbI3ojfnAVH3F7dx8XJXlyQzYEVlMKWBowLB4XZQMDBxlaFCNAVEVfWVVAE3MNRlMAEFZ2B1QWRBc+AmgDRhQVZldrVB4VcQR0BwIeBVIaBFNKVAMGVgYcVVUHBwFPRhsVQEANX1AXDQEABwoEVwECUlBLCwMY","wx1":"v1$9ba4$SBMQAw5BXUMPTkdRBRIOEwxHUQYGVQIEBwQOUQ1SAAcAV1VSWgVcBQUHBgBXAlcBBVdDTRlBEF0IVRVeCVMFDgACU1ZTABZYAAQY","cpt":"v1$9a28$TBNHWQpDUBAOHRRYEAFeCx5UBAUTWxQSRlwHV1APThobE1BNAl9aHUxLWw0ERw1GXFQcBFRDGkBCWgFTXUxaSAMKEVsJUlBRR1tqGwQTVFUfAVcjAVBzPhYRXxRCEVhaVlNdQURLGRBAD1tcR18GUgUMVlUEVQdWGgpQBE8=","ni":"v1$a621$GEYQBA5CUUYIGzxGa0NIFkJfD1QSXgIGVwlSVVNSUARNXVNXHw==","nf":"v1$061e$TxMUBQ8UABUJSEEiEhYKRAtbLABDWVUCEl9CQQxDRnZEQw0QDFsqVVlWABZAXh4SJBcDDQ9EXS8JU1EPU2sQRF1fBUZZQzpRXWxBTkAkAlUQWz0+RUJdFwlvb0EMGiREUVdYV0FNR3dFUg9YFAUJRQEuBEMPEm0FCG8STxR4EldYCxYLMBUXXl1UQVhAOwNeO0NOQ3VGUw9cQEIMRl0WQk14ESENFAhSQVIBDgdGXxI7Bww+FxwQIxBRXFlfSzREW0UNEBoRAHhVEVlAPQILb0ZNQCFDUV5ZOW9cDFlTEUZnVBYQBhM6aBEJQT0ECjoSSEMiF1RcCDw5XF8MXU0UcVFFFgERPjoVCRE8BAw7RxxGIRQAWQpaAhV/Rw1mSgtGUUMWHUFbR2hVXTxATkYlRgUNWD5qVFcFD15VMFNMEFNGbj1GWUM6UV1sQU5AJBNRCFs9PlFVVAoIVXcGQkwBRGtuQF5BPgNZbBFPQCISBFxeAg0PRkRAFgVEXxEUAkZpUl89Rh5NR3dFUg9YAQsLQxATFwJBX0BBXBJvBVhnRhoWcRQFD1sTXlFBAhYHRl8SOwcMPhccECMQUVxZRV0KUnZUAwcMD0cNEWwFDD1GSRIkFwMND1pTFQd1XgJUVAFSFgtAOwUPOhUfESMUAwhfVwEVJQBYVUICAkMSWRRnAlhrE05GIxcEWwlUBhYgBRFEARMbQw8SbQUIbxJPFHgDU0ALFQEBBRdeRVYRQFgCBFwXBE5DdVdXF1xfXi9fVgEUDkUQEQZNR3dUVhdYDgULVxEABQRGEggYRHBREUQCCFNaVhYMQVtUGxFzAhAQXlUSXkMQFBdNHkEmV1UXDFQFWFNEAwMGQ18VQUZBTkAkAlUQWxcSUEJzBANeREEMGkYaFnEFARdbFUVcVxYBFkZfEiMEAQpaEh5BJldVFwxICFdAVw0WDkNfFWRaDVFQRkkSJAYHFQ9RQhMwVUIQX1cKFA4TQEhBIQJSRwkCEhIqBF0BQ1hDe1VGEAVRQAYUFEZ2U1QWXgIRFXRcVwYsAwkAEl5DLw5PWV4PBxIcQXZfAUIOUg0LCAgAcl1SAQ4HAEcKAgAOElAcECMBVURZXlkWUkNQEAEgDgtURkERBwwHHBJeWU5DdVdXF1xHVQFdURBmUUMRDRAVAFlHYBcNEAUCVUZbGUN1QEAMEl8KJ1NIFlNXUBYBBzIRWEFSBAczEQpEBUNYGhdwQhEJRF9ZeVoOU1dFQF5BPghoER9BIhQFCQoHDgwSQUJHABJfQkEMGjtQWm5ASEEhE1ZfCREHExEAQxAwFw5BURBZRG9WDWkaSBR0RwMIWRAQUkFKNhEDAwBxCgUzFFpEU0FcEm8FWGdGS0kdQCQEBBENRFYBCQsQMVUJEQ0TVEJLMBJfQgJRXUYMTxMiFBEOEVgJdwYSEAEGURAEBjJBX0ACAVVhFllMBRQOEyIWBgdfARFOT0AiAwBEXhEGB2NZVxQDQnUNV1oIU1ATWAICDRZSHxEjBQcQX10NDAc1TEBXEEQKS0F2SBZZQF5YKQoMAGNKQwYjEBYESUZbGUN1QEAMEl8KLFRSAVVAE1hGPAw6FR8RIxQDCF9TCw8RFUdFURcJQhJZFGcCWGsTTkYjFwRbCV0CDwcALEQBDEBbF29UDTkSHEF2TgVaDlgWAQ5DXxVsVQ09QEhHcAMEFltZVVwEElgSWQZFGRoWcQUBF1sVW0ZUCgwRRl9LRiESE1pEXVk2XEUEX1YlREZQG0ZZGkd3Q0EMFg1eKlIOBAEVFwoQPAtvEk8UeBJXWAsBCw0SEUVGUBcNEEZfEjsHDD4XHBAjEFFcWURdAkRRQgpGWUM6UV1sQU5AJBNRCFsMAFhVVioSVV1BDBo7UFpuQEhBIRNWXwkKFgcJRwpGPgQPahIeQSZXVRcMVAFYU0UKRllRGEofESMFBxBfUwsPDARWRFsMCBIKQWlWOxQYEyIDBhVfUFZcDw0BBRFZCw9AWxdvXDxEHBIjUV0QDFBeLAsXNRdWUFhBWEA7C29GTUAhUlVGWRNDVRF3WxBfQlAWDQwPRw1IESMSEAsRX140EQRHcVEXD0ZRF19XChQOSkAkExMKQ1wJLAAIAQZERltAPlhvEE9EcEYCWgIHWVpCFhYWAhFYQRFZQD0CC29GTUAhUlVGWQ9DcQBCURJTFgsEBQ8SABsRcwQHFl4NURcjBwRbcVEXD0ZVQQxeBVpHVB8ZT0MlUFZHWQ8DHDFfEQIKMVpZXBcVEgpTGhokUVFFWBIGDwFYQRFZQCULClcIBEIoW1McQUoScARTTF5GRl4GEQAVNkJREVlAUFRVA1RQUlYXHBAjAVVEWUBdClJbQzERAUNfFRFOHk5AEAxdAUNYUAMEC1BVBQRSAhZdAwZM","mev":"v1$d619$GhsXV1hCUxRcaz5NQxBYXlFBDVQCDAFVVgIAA1IdWw1SRA==","wci2":"v1$8e5e$HUNUHFJEDxIxSkVWcUVHC0NZQiJNXltGD1dXGxEUDEMJFUgUVEhBXzZHR1paUBUWVBIXDUpVSxISUFhBQUEXXw8SFkRTAxVRRXVAXVdDXAtfQU5GS0RZUQ0aAxc1HxNSIxNDC0NcFXYQXVZHXVhbSkERDRBXREFCAxZNWjISEV4IBhEWVBdAWRdWRhNAX1QQEUQWDFFDHxIEXRlUQSAWWQUVWAtfOlsQRRMVUkAXegZbBgEQFkRXYRJKUFsGRksLBw9eCkgLWkUWDRxvWhcVRBECFkR3UlJXBUwXVgkDAFxGSVkQRRZGCkocQkRDGVQIVwIREEpRUBwUTRZqPhcRVhIOQ0tAB0BEDWxAR1loQ1YfCRFeCQoKAlUIDQxIOg0XRkERBUVGXUQRQ0YJGxhCE0ZNAwheUUtGFFlRGxMTTGg5EEMFRQlHHxRSQEdcaEAQXDwUVhZaSwhXAgECV1RWawhBEUQRB0EQC1ZCE2RFWglYEAdEEAxZXAlWQFgOExAJTz1fRBFGFVERE11HQEdGXh5MFRNPHlleAFlKQRMHCxkUFB47bhdHURFcRxxFVkAQWTwXEFVvTgBIUkoPUFxbAFNRAjhfRhUQRVJBE3VFRwVITQ8FSBAQDgdWVlsYCwxCFV8YOF9GFRBFUkETRxcdDEUXEhcCHxdFEU8XVA0AAkQSE1AMHxRAHzpsREFVQ1oWHhIDEUxYZ0cSVWZDU0gJRFxQC1wGUgIETG9bExQXFQVFQy0GUlVbRkhdFwkCCQ5HExVUAA9GblEWE3J4e1xkORFLChBMQEsISRdOQhZIAlsAAEIQQwddHhdGGmxrRkcFRQwQS0lRTUYOZ0xBDDkVBUgLQl4AXA0EUAcMGmhZFUQRQwMQGF8WR0gEWloMFhZDAwUPRBkOQUQVQA8cG0BCEx8CDgJZQ0xAB1AXRxRJPGgXE1AQXhQaQQRGQVtrQkEJbhVQSlJDAgNcAAEFUlRKawhBEUQRB0EQDUdBQ0cNGktGFBVKWVxeUxVMS1QJSBFCST5uFUMHQV8XHERSQUNdO0QXDztOAhZYFQIID1NXUANfUxNIExJcXQARDwICAwxXAlZWVQweAQdSRQ==","wci3":"v1$c95c$SUBXSFtHWBI1HxVQJkdCWkdfRnETXVFDXVdWGEUWDkddFktAXUsWXzISF1wNUhBHUBQTXhRWQRdAUFlCFUMVW1sRFRBaAEJRQSAQWwBBWVpbR0oVFUdTVF8aAhRhHRFWdxBAX0pfQnYUCAZBClpeG0UXCUMJR0tHURZMWWYQE1pcBRJCXRQXWRMDFhUXXVFBFUISXw9AFRdWXRhXFSIUXVEWW19WOQwQQUZFVBcVRFpmERReCFQSHwhZVllbHQxcRxEMGWQLQhBBRgRBQ3pSX1AGEhkFW1dUXxgQXkEQEUAITR1HTxJMUQ0ABEYXR1FdGxcTGDlsQ0VVTFdEGhUARkYKbUVMCD1GU0gPRlkECgcFVlcAURpuWRQYGBZUEEFbRhZCQwJKTUcWEUtUD1NRRkEXB19IQUcYa2dJRFQQDkEdE1NFTA09RRULOkNRG1pGD1RcD1EFAAJoVhgWFUQARxIMV0cYNRBfDA8WUEMdDFRbCghOC1xHRAoRZFgVREETUxYSWEwREkNbSUpCFEIeVFkDB0QSQVNfGkpNGWo7EEFTFl1CFxQDRRUOOkAXWG9DB0sMRFwCCA8DDQgFaQpBExJCU0QYJBBCAB9LWAJFEB0JBAhYCEpfWEFLBh9pCkETEkJTRBgWQhgJEhFFEA8fGkISERkHX1RWR0xKV11KE0YdPW1BSgQWXxNJFFQWQVhqQBELaBABHF1HAgkMDVNVBAZLbl4YRUIQABJFegFfVVZBSwMZWlBdWkRNTFNRWkFoUxESd3MqCWE8Rk1dF0FARg9KSUARRBxWWF5ZRUEWAFscEEcfZzoTQgASCkdMRFFAQQ05QhJebUEGFlJFD1VbCwZXBgkROQwQQUZFVBcVXxtAS1pUCV5CQkBdXAgVTAlHRhJBChdKFUcWSARZBVRDQUcEDhkURh1oa0lKV0ELExxDA0dEUDoXRAw5EwdNX0MPBF9eD1YAAB5oVhgWFUQARxIKRkRIFlgfThESQk1UXFNUFhJFB1scRUEXZ2lEFgBHXRAdQVkQFlg+ExFYPEMCG18WXAZcAQMEAAEKFBlGFVpfBxAKCVNWCVJVUAFSAR4MAFMb","st3":"v1$dc44$ThIBSFoUAxUxTxQHcUpDV0cIRC9YXFcCUFkYXFpFW1pURA1fVxQVFRZCBQFfGgsaYUsUA3FCQApDDxh8WF9RXlRcRFlXQFZUBEINDVpkXxgVEkQHQBB9B1tQW0EaUFxcVltEGFFCTUcWDEtNQ09GFlReAgdHREAEWRtKQBtsa0hHURBfSxlIVhBCDD1BTFxnQwBKDEcKA18DBQwMBwYdZVsQRBAZV00XDUIQEkcCHhdCRRNIVVxUBEJBSlRcHUZMGm87QUtXTVgXGRUDQUxZZ0BGCTlCAhwPQg8JDwwEAgsAbAoQGRYZVhEWCgdDGGFKWl8NFVEQGllQW1dbTV5bTEYOTWxXFhkXRVcQQlxMRUhGCEtJQ0dFS1BZXlRHR0ZYXR4WRRZpZkYXVxANRhdAWUBGDDlBRF86RwcWX0cJBQMNB1EACmpXF0UWRANAGHBKR1MdSFlRQkUZCVlbW11NVFpFFw4QalcXRRZEA0AYQhgdWhASREMISh5CT0IaUlhfVEMQQlheF0UQGTs9RUpQTFpASxdVRUYNbkBMWGtFBhdfQ14BAw4OA1ICTT5aGBEYFVMQRntSWABSQRZQGg9XVlhAEURcUgcXPlcXQnNzflNkb0ROXERGFUIPFxpDREMXVFwCUUpCS1YNGBYXG2duSUdTEAlGH0MEREFQakFHWWZDAkpaSgwIDV0CUVYNEW1WFRJERlVEEgofQBYJV1xZSUBEAVQHFhFfEUIUEQ4XHk9CRUoHWFZTFkVHWV0aQUEWam8VQlhCVkVKRwUXQFBuTUFfOxAGHlgWCwQCDQwDBwscbAoQGRYZVhEWDBZASEICGh0TEUMeUwlXVEtBRlJcF0dFS29mR0tWEVkWTUVZRExdbRESWW9EVx9fSw8FCQYIBgRdAmVYGRdFFgUWFE0REF1GEBZHCh1KRkJPG1VfUlhGRBZRURhLQkppOxNGWUVXRx0VB0FEWjpEQVVqQgEaU0YKVQoNDwEOVB9GThZMWFVQEF5XAgQLVgIADAQAHQ0MDU0=","st4":"v1$b584$TxtRTwVDDRNlSxJdfUNDVkBeF3hdCQYDWQkUXF8QXABVTV1YCEMbE0JGA1tTEwsbZh1HVHQXEQtKXxR8XQpWBFVVFF4IF1hSUEYLV1ZtXxkSRBdQRUUsBlIAV0EfBVsGV1IUHw4VQ0FCCE0XT0ZGF1MIUVBCEREFUEtGQB45bBJGWEBYFE5GUERGCmdNRVxmRFYZW0JfUl4KVQEEBF4aP1oZFBdGAEMRWUYWSEsLHhZFE0AfUAkFBUsRRlRZSEEWG2ZrRhQAQ15DHRNZTUVZZkcQWm5HV00OS18FDwlRBVEBZVoXRkEXUEUSDF1PEWFLXQleQlRFS1hZC1tbSAtcFkcHHWsIQRcREVMWGFBFRUlBXhgeRhIUSlkJUlRCEkECXBdGQkk+aEBDUxZXSh5AWEcQX25EEQ47TlcaX0JcAlkMDgEHVT1ZERESQllMEXBLQAVOH1wEE0QQWVVbXghKDltMRwlPPVkRERJCWUwRQhkaDENFQRZZSxcSQ0IfB18FVUpARQcJGUNEHT1nSUNQTV0WGEBQEBcMZxBAWG4QAU1eSg4GXFkABQYGS2RWEREZEgVDEX4HCQFbERpQH1pQDFlJQUMDBQkRalMRGH96flJjORcZWREXFEtfGxpGEURNVVVSVhUVRVBZHBBNF25uSEAFQ15DShIFTRFcakQSXjxCCxpdFVsGCwkGVwwBGG1XEkQXEVARQwsWEBoJUgleE0FNUVNYQR9ZRUYSSwIeHk5FExlQXQMCF0wXVV0fFEZMa2ZFRQcVWEMeQwNNTFluTEYJaEcDSwkXAlQODQlWAFEdZVoXRkEXUEUSCkxMQUIDHUtARkZLAgheBEdBQwdbTUZMG2g5EEVQRV0QF0lQRE1aO0JFXDoVVhYPRw8AXAFSBw0NBToPFxEREgNMGEQREVoQQ0FCX0xLTxJDG1AKVQJHTUZWDk9FRB5tPUlKUEVWQEtGUEQRCztNEVlqR1QdCUcDBQ1SWA8IABtAFBpFWFRXRg0AB1FaVwtQAAQFSApWDUQ=","nb":"v1$14eb$GhsSU1wWBhpfTBYkQEUKRF4Ld1UVR1RBTC5WXFMDUhNDAx8QcAQGTF9bURJVW0cKAR8NBU0RcVRQFw1WWxdUCQBLA1teBDdRCFIWXgcFVAEdE3VTBEcLUF0CRVVbClA1CFQBEAoNFlQJGxYkV1IRClJZVEYGWl9UF1lRU14XUhwcFUZGWQ4GGl8GAlAJBFYFBQABGlgFBU4=","md":"v1$69a5$GEAUAF1AVhEOGBEPUUFfYk8TClENURpbRlIXU1sKClgTFxZDHRdfUlYGX0APQUcVFlUETgpWXSgAEVgVEElBURENFxF4UREJFgEAVAYBUV0FAVELAFMPV1xQAQAGB1sAAgcDUgBWUgFXUwBSAVdRCVEBWAoCUQ9QBwBTBQYHBgRWUgRSBwNXBAJBTk5OQQ5QWlVDAkFDUQUBXAtZQhAXFE9ADgBTUF8RDkERThcHAE9dUgRxBxcCQ0YfQFBAChZGKgZAWxMDCwUABVVaAQdUW1VXVF5aVwtUUAdbUwpcU1cHUlYFAlcBAlJVC1ANW1NbBldUC1BQDVUHUFJRVlRTBAdaB1IAF04fT0FYC1sHRwMWUBRcClpXFBBDF0MQSUFaAgAHDRMPEREYQVcHQwoGXH1VQwJBFxRDA0ENQkIsBxRZQABSBwZRB1BSA1IGAAMOAgkCW1QBWllSUgdWAVQAV1EBUlIBAQcHBAYDWwcCAQ4FUlIJUQFaBFYGUlEBU1VSVFRAHGwZEVZQDRFYFwYLTFlUE1kXUHwEEloBUkFHTxQGBkBbE1NGXVcXWg1bQwBXQVwESgJBXSUBRQtUVxZLH0MZQjpfVEdaQgYTAVoHAGQUTENFTxdMCAlWQA0DU1cPUFFXVQAAHQEMW04=","version":"2","vx":"69712131946379f3351b27d244321cba"}
    """
    if "__qrator/validate" in request.path:
        request.body = json.dumps(virt).encode('utf-8')
        del request.headers['Content-Length']
        request.headers['Content-Length'] = str(len(request.body))

def cookies_selenium_to_requests(driver, session):
    cookies_dict = {}
    all_cookies = driver.get_cookies()
    for cookie in all_cookies:
        cookies_dict[cookie['name']] = cookie['value']
    print(cookies_dict)
    requests.utils.add_dict_to_cookiejar(session.cookies, cookies_dict)

class CreateInsurance:
    def __init__(self, json_table):
        self.json_table = json_table
        self.client_data = json_table.data
        if self.client_data.telephone != "":
            self.telephone = TelephoneActivateSms(
                id_num=self.client_data.id_num_telephone,
                date=datetime.strptime(self.client_data.reg_date_telephone, "%d.%m %H:%M %Y"),
                tel=self.client_data.telephone
            )
        else:
            self.telephone = TelephoneActivateSms()

    def auth(self):
        self.chrome_options = uc.ChromeOptions()
        self.seleniumwire_options = {}

        self.session = requests.Session()
        # ---------------------------------Ставим прокси----------------------------------------------------------------
        if Config.proxies != None:
            self.proxies = Config.proxies
            self.session.proxies = self.proxies
            self.seleniumwire_options['proxy'] = Config.proxies
        else:
            self.proxies = None
        # --------------------------------------------------------------------------------------------------------------
        self.driver = uc.Chrome(
            options=self.chrome_options,
            seleniumwire_options=self.seleniumwire_options,
            version_main=Config.selenium_version,
            headless=True
        )

        self.driver.request_interceptor = interceptor
        self.driver.get('https://www.alfastrah.ru/individuals/auto/eosago/calc/')
        self.driver.wait_for_request('/js/detectPrivateMode.min.js')
        cookies_selenium_to_requests(self.driver, self.session)
        self.driver.quit()

        self.r = self.session.get('https://www.alfastrah.ru/individuals/auto/eosago/calc/', headers={
            'cache-control': 'max-age=0',
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'none',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-user': '?1',
            'sec-fetch-dest': 'document',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        self.session_id = BeautifulSoup(self.r.content).find("input", {"name": "sessid"})["value"]
        print(self.session_id)

    def create(self):
        # ------------------------------- Сохраняем авто ---------------------------------------------------------------
        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.s = SaveAuto(client_data=self.client_data, session_id=self.session_id)
            print(self.s())
            self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step1_form_auto_save_data.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windozws"',
                'origin': 'https://www.alfastrah.ru',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            }, data=self.s())
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных авто: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                self.calculation_id = self.r_json["calculationId"]
                break

        # --------------------------------------- Сохранение адреса собственика и водителей ----------------------------
        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.s = SaveVoditelAndOwnerAddress(calculation_id=self.calculation_id, client_data=self.client_data)
            print(self.s())
            self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step1_form_save_data.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'origin': 'https://www.alfastrah.ru',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/mod/?id=195872875',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            }, data=self.s())
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.get('https://www.alfastrah.ru/ajax/calc_eosago_step1_form_verification.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/mod/?id=195872875',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            })
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            if not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        # ----------------------------- Подтверждение телефона ---------------------------------------------------------
        if self.client_data.telephone == "" or ((datetime.now() - datetime.strptime(self.client_data.reg_date_telephone, "%d.%m %H:%M %Y")) > timedelta(minutes=55)):
            self.telephone.get_number()
            self.json_table.set_value('reg_date_telephone', self.telephone.date.strftime("%d.%m %H:%M %Y"))
            self.json_table.set_value('telephone', self.telephone.tel)
            self.json_table.set_value('id_num_telephone', self.telephone.id_num)
            self.json_table.set_value('telephone_service', self.telephone.name)
            self.json_table.set_value("login_parea", self.telephone.tel)
        else:
            self.telephone.retry_sms()
        self.phone_number = f"+7 {self.telephone.tel[1:4]} {self.telephone.tel[4:7]}-{self.telephone.tel[7:9]}-{self.telephone.tel[9:]}"
        print(self.phone_number)
        self.data = {
            "phone": self.phone_number,
            "command": "sendQuery"
        }
        self.data = urlencode(self.data)
        self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step2_phone_confirm.php', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'x-requested-with': 'XMLHttpRequest',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        }, data=self.data)
        self.r_json = self.r.json()
        print(self.r_json)
        if not self.r_json["success"]:
            self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при верификации телефона: {self.r_json["messages"]}')
            raise CreateErrorAlfa

        self.data = {
            "phone": self.phone_number,
            "command": "sendTempPassword"
        }
        self.data = urlencode(self.data)
        self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step2_phone_confirm.php', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'x-requested-with': 'XMLHttpRequest',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        }, data=self.data)
        self.r_json = self.r.json()
        print(self.r_json)
        if not self.r_json["success"]:
            self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при верификации телефона: {self.r_json["messages"]}')
            raise CreateErrorAlfa

        self.phone_code = self.telephone.get_sms_code()
        self.data = {
            "phone": self.phone_number,
            "confirmPhoneCode": self.phone_code,
            "command": "sendSmsCode"
        }
        self.data = urlencode(self.data)
        self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step2_phone_confirm.php', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'x-requested-with': 'XMLHttpRequest',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
        }, data=self.data)
        self.r_json = self.r.json()
        print(self.r_json)
        if not self.r_json["success"]:
            self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при верификации телефона: {self.r_json["messages"]}')
            raise CreateErrorAlfa
        self.json_table.set_value('reg_date_telephone', self.telephone.date.strftime("%d.%m %H:%M %Y"))
        self.json_table.set_value('telephone', self.telephone.tel)
        self.json_table.set_value('id_num_telephone', self.telephone.id_num)
        self.json_table.set_value('telephone_service', self.telephone.name)
        # ----------------------------- Сохранение страхователя --------------------------------------------------------
        self.s = SaveInsurance(client_data=self.client_data, phone_number=self.phone_number, calculation_id=self.calculation_id)
        print(self.s())

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step2_form_save_data.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'origin': 'https://www.alfastrah.ru',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            }, data=self.s())
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при проверке данных: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.get('https://www.alfastrah.ru/ajax/calc_eosago_step2_form_verification.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            })
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.get('https://www.alfastrah.ru/ajax/calc_eosago_step2_form_calc.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/pers/?id=195872384',
            })
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Стоимость страховки: {self.r_json["price"]}')
                break

        # ----------------------------- Сохранение ПТС -----------------------------------------------------------------
        self.url = "https://www.alfastrah.ru/ajax/calc_eosago_step3_form_save_data.php"
        self.s = SavePts(client_data=self.client_data)
        print(self.s())
        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eosago_step3_form_save_data.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'adrum': 'isAjax:true',
                'sec-ch-ua-platform': '"Windows"',
                'origin': 'https://www.alfastrah.ru',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/autom/?id=195872384',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            }, data=self.s())
            self.r_json = self.r.json()
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при проверке данных ПТС: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.get('https://www.alfastrah.ru/ajax/calc_eosago_step3_form_verification.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'adrum': 'isAjax:true',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/autom/?id=195872384',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            })
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при сохранении данных ПТС: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.start_while_true = datetime.now()
        while True:
            if (datetime.now() - self.start_while_true) > timedelta(minutes=4):
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОСАГО долго проверяется сайтом(4 мин.)')
                raise CreateErrorAlfa
            self.r = self.session.get('https://www.alfastrah.ru/ajax/calc_eosago_step3_form_calc.php', headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': 'application/json, text/javascript, */*; q=0.01',
                'x-requested-with': 'XMLHttpRequest',
                'adrum': 'isAjax:true',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/autom/?id={self.calculation_id}',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            })
            self.r_json = self.r.json()
            print(self.r_json)
            if self.r_json.get('exception') != None and self.r_json['exception'] == 'Технические проблемы':
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Технические проблемы Альфа. Пробуем снова')
                time.sleep(1)
                continue
            elif not self.r_json["success"] and self.r_json["loadStatementEosago"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} ОТКАЗ')
                raise CreateErrorAlfa
            elif not self.r_json["success"]:
                self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Ошибка при рассчете стоимости: {self.r_json["messages"]}')
                raise CreateErrorAlfa
            elif self.r_json["success"]:
                break

        self.r = self.session.get(f'https://www.alfastrah.ru/individuals/auto/eosago/calc/preview/?id={self.calculation_id}', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-dest': 'document',
            'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/autom/?id=195872384',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(f"https://www.alfastrah.ru{BeautifulSoup(self.r.content).find('span', string='Образец полиса').parent['href']}")

        self.r = self.session.get(f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-user': '?1',
            'sec-fetch-dest': 'document',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/preview/?id={self.calculation_id}',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(self.r.status_code)

        self.r = self.session.get(
            f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}&getCookieContent=Y',
            headers={
                'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
                'accept': '*/*',
                'x-requested-with': 'XMLHttpRequest',
                'adrum': 'isAjax:true',
                'sec-ch-ua-mobile': '?0',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
                'sec-ch-ua-platform': '"Windows"',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-dest': 'empty',
                'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'ru-RU,ru;q=0.9',
            })
        print(self.r.status_code)

        self.data = 'action=button_buy_click'
        self.r = self.session.post('https://www.alfastrah.ru/ajax/calc_eaosago_ppd_log.php', data=self.data, headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'x-requested-with': 'XMLHttpRequest',
            'adrum': 'isAjax:true',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/preview/?id={self.calculation_id}',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(self.r.json())

        self.data = 'nextUrl=%2Findividuals%2Fauto%2Feosago%2Fcalc%2Fpayment%2F'
        self.r = self.session.post('https://www.alfastrah.ru/api/cross/eosago/', data=self.data, headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'x-requested-with': 'XMLHttpRequest',
            'adrum': 'isAjax:true',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(self.r.json())

        self.r = self.session.get('https://www.alfastrah.ru/individuals/auto/eosago/calc/payment/', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-user': '?1',
            'sec-fetch-dest': 'document',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}',
        })
        print(self.r.status_code)

        self.r = self.session.get(f'https://www.alfastrah.ru/individuals/auto/eosago/calc/payment/?id={self.calculation_id}', headers={
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-user': '?1',
            'sec-fetch-dest': 'document',
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/cross/?id={self.calculation_id}',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(self.r.status_code)
        self.order_id = self.r.text.split('data-order-id = "')[1].split('"')[0]
        print(self.order_id)

        self.r = self.session.get(f'https://www.alfastrah.ru/individuals/auto/eosago/calc/payment/?id={self.calculation_id}&getCookieContent=Y', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'accept': '*/*',
            'x-requested-with': 'XMLHttpRequest',
            'adrum': 'isAjax:true',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'sec-ch-ua-platform': '"Windows"',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': f'https://www.alfastrah.ru/individuals/auto/eosago/calc/payment/?id={self.calculation_id}',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        })
        print(self.r.status_code)

        self.s = InitPay(calculation_id=self.calculation_id, order_id=self.order_id)
        print(self.s())
        self.r = self.session.post('https://www.alfastrah.ru/online/initpay.php', headers={
            'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'accept': 'application/json, text/javascript, */*; q=0.01',
            'x-requested-with': 'XMLHttpRequest',
            'adrum': 'isAjax:true',
            'sec-ch-ua-platform': '"Windows"',
            'origin': 'https://www.alfastrah.ru',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            'referer': 'https://www.alfastrah.ru/individuals/auto/eosago/calc/payment/?id=195872384',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ru-RU,ru;q=0.9',
        }, data=self.s())
        print(self.r.json())

        self.json_table.set_value("url_pay", self.r.json()["payment_ref"])
        self.json_table.set_value("status_bot", f'{datetime.now().strftime("%d.%m %H:%M")} Контракт успешно зарезервирован. СК: АЛЬФА')


class CreateErrorAlfa(Exception):
    pass